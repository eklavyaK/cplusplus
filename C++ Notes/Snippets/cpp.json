{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"boilerplate": {
		"prefix": "testfile",
		"body": [
		  "#include<bits/stdc++.h>",
		  "#define mp make_pair",
		  "#define mod2 998244353ll",
		  "#define mod1 1000000007ll",
		  "#define rapid_iostream ios_base::sync_with_stdio(0);cin.tie(0)",
		  "#define removezeros(s) s.erase(0,s.find(\"1\")!=-1?s.find(\"1\"):s.length()-1)\n#define binary(n,k) bitset<k>(n).to_string()",
		  "#define makeset(s,c,sizeofc) for(int i = 0; i<sizeofc; i++){s.emplace_back(c[i]);while(i+1<sizeofc && c[i+1]==c[i])i++;}",
		  "#define print(n) cout<<n<<endl",
		  "typedef long long ll;",
		  "typedef long double ld;",
		  "void Y(){std::cout<<\"YES\"<<std::endl;}",
		  "void N(){std::cout<<\"NO\"<<std::endl;}",
		  "using namespace std;",
		  "",
		  "int main(){",
		  "\trapid_iostream;",
		  "\tint tc;cin>>tc;",
		  "\twhile(tc-->0){",
		  "\t\t$0",
		  "\t}",
		  "\treturn 0;",
		  "}"
		],
		"description": "boilerplate"
	  }
}